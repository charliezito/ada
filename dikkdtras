#include<stdio.h>
int d[10], p[10],visited[10];
void dijkstra(int a[10][10], int s, int n)
{
int u=-1,v,i,j,min;
for(v=0;v<n;v++)
{
d[v]=99;
p[v]=-1;
}
d[s]=0;
for(i=0;i<n;i++)
{
min=99;
for(j=0;j<n;j++)
{
if(d[j]<min&& visited[j]==0)
{
min=d[j];
u=j;
}
}
visited[u]=1;
for(v=0;v<n;v++)
{
if((d[u]+a[u][v]<d[v])&&(u!=v)&&visited[v]==0)
{
d[v]=d[u]+a[u][v];
p[v]=u;
}
}
}
}
void path(int v,int s)
{
if(p[v]!=-1)
path(p[v],s);
if(v!=s)
printf("-> %d ",v);
}
void display(int s,int n)
{
int i;
for(i=0;i<n;i++)
{
if(i!=s)
{
printf("%d ",s);
path(i,s);
if(i!=s)
printf(" = %d ",d[i]);
printf("\n");
}
}
}
int main()
{
int a[10][10];
int i,j,n,s;
printf(".........................................................................\n");
printf(" Program 7: Demo - Dijkstra's Shortest Path Problem \n");
printf(".........................................................................\n");
printf("\n Enter the number of vertices : ");
scanf("%d",&n);
printf("\n Enter the weight matrix:\n");
for(i=0;i<n;i++)
for(j=0;j<n;j++)
scanf("%d",&a[i][j]);
printf("Enter the source vertex : ");
scanf("%d",&s);
dijkstra(a,s,n);
printf("\n\n Shortest path from Source Vertex %d to all the remaining vertices are:\n",s);
printf(".........................................................................\n");
display(s,n);
}